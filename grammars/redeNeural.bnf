<network-architecture>	::= <pre-features> (<classification>) (<softmax>) (<learning>)
<pre-features>			::= (<convolution>) (<features>)
						  | (<convolution>) (<features>)
						  | (<convolution>) (<features>) (<features>)
						  | (<convolution>) (<features>) (<features>) (<features>)
						  | (<convolution>) (<features>) (<features>) (<features>) (<features>)
<features>				::= <convolution>
			 	  		  | <pooling>

<convolution> 			::= layer:conv [num-filters,int,1,32,256][filter-shape,int,1,1,5][stride,int,1,1,3] <padding> <activation> <bias> <batch-normalisation> <merge-input>
<batch-normalisation> 	::= batch-normalisation:True
						  | batch-normalisation:False
<merge-input> 			::= merge-input:True
						  | merge-input:False

<pooling> 				::= <pool-type> [kernel-size,int,1,1,5] [stride,int,1,1,3] <padding>
<pool-type> 			::= layer:pool-avg
						  | layer:pool-max
<padding> 				::= padding:same
						  | padding:valid

<classification> 		::= <fully-connected>
<fully-connected> 		::= layer:fc <activation> [num-units,int,1,128,2048] <bias>
<activation> 			::= act:linear
						  | act:relu
						  | act:sigmoid
<bias> 					::= bias:True
						  | bias:False
<softmax> 				::= layer:fc act:softmax num-units:10 bias:True
<learning> 				::= learning:gradient-descent [lr,float,1,0.0001,0.1]

